<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= mood.charAt(0).toUpperCase() + mood.slice(1) %> Mood - TuneIn</title>
    <script src="https://unpkg.com/lucide@latest"></script>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/main.css">
    <style>
        .content-container {
            margin-left: 250px;
            padding: 20px;
            flex-grow: 1;
            margin-top: 80px;
            margin-bottom: 80px;
            width: calc(100% - 50px);
            background: #0f0f0f;
            min-height: calc(100vh - 90px);
            margin-left: 10px;
        }

        body.sidebar-open .content-container {
            margin-left: 10px;
            width: calc(100% - 50px);
        }

        .mood-header {
            display: flex;
            align-items: flex-end;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(to bottom, #4f4f7a, #181818);
            border-radius: 8px;
            color: white;
        }

        .mood-info {
            display: flex;
            align-items: flex-end;
            gap: 24px;
        }

        .mood-emoji {
            font-size: 64px;
            background: #b32020;
            width: 232px;
            height: 232px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            box-shadow: 0 4px 60px rgba(0,0,0,.5);
        }

        .mood-emoji i {
            width: 160px !important;
            height: 160px !important;
            stroke-width: 1.2;
            color: #ffffff;
        }

        .mood-emoji svg {
            width: 60px !important;
            height:60px !important;
        }

        .mood-details {
            display: flex;
            flex-direction: column;
            gap: 8px;
            padding-bottom: 8px;
        }

        .mood-label {
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 700;
        }

        .mood-title {
            font-size: 96px;
            font-weight: 900;
            margin: 0;
            letter-spacing: -2px;
            line-height: 96px;
        }

        .mood-info-text {
            color: #b3b3b3;
            font-size: 14px;
        }

        .songs-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 8px;
            margin-top: 24px;
            color: white;
            padding: 0 32px;
        }

        .songs-table th {
            padding: 8px;
            text-align: left;
            color: #b3b3b3;
            font-size: 14px;
            font-weight: 400;
            border-bottom: 1px solid rgba(255,255,255,.1);
        }

        .songs-table td {
            padding: 8px;
        }

        .song-row {
            cursor: pointer;
            transition: background-color 0.2s;
            height: 56px;
        }

        .song-row:hover {
            background-color: rgba(255,255,255,.1);
            border-radius: 4px;
        }

        .song-number {
            width: 40px;
            text-align: right;
            color: #b3b3b3;
            font-variant-numeric: tabular-nums;
        }

        .song-info {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .song-cover {
            width: 40px;
            height: 40px;
            border-radius: 4px;
            object-fit: cover;
        }

        .song-details {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .song-title {
            font-size: 16px;
            font-weight: 400;
            color: #fff;
        }

        .song-artist {
            font-size: 14px;
            color: #b3b3b3;
        }

        .music-controls {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            width: 100%;
            background: #181818;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-sizing: border-box;
            z-index: 1000;
            border-top: 1px solid #333;
        }

        .track-info {
            display: flex;
            align-items: center;
            flex: 1;
            padding-left: 20px;
            max-width: 300px;
            z-index: 1001;
        }

        .track-info svg {
            margin-right: 12px;
        }

        .track-info div {
            z-index: 1001;
        }

        #track-name {
            color: white;
            font-size: 14px;
            margin-bottom: 4px;
        }

        .artist-name {
            font-size: 12px;
            color: #b3b3b3;
        }

        .controls {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .controls button {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
        }

        .progress-bar {
            flex: 1;
            height: 5px;
            background: #333;
            border-radius: 5px;
            margin: 0 20px;
            position: relative;
        }

        .progress-bar span {
            position: absolute;
            height: 100%;
            width: 0%;
            background: #b62020;
            border-radius: 5px;
        }

        .volume-container {
            position: relative;
        }

        .volume-slider {
            position: absolute;
            left: 50%;
            bottom: 40px;
            transform: translateX(-50%);
            display: none;
            width: 5px;
            height: 80px;
            background: #ccc;
            border-radius: 5px;
            cursor: pointer;
        }

        .volume-slider input {
            transform: rotate(-90deg);
            width: 80px;
            position: absolute;
            left: -37px;
            top: 30px;
        }

        /* Column widths */
        .songs-table th:nth-child(1),
        .songs-table td:nth-child(1) {
            width: 40px;
        }

        .songs-table th:nth-child(2),
        .songs-table td:nth-child(2) {
            width: 40%;
        }

        .songs-table th:nth-child(4),
        .songs-table td:nth-child(4) {
            width: 100px;
            text-align: right;
            color: #b3b3b3;
        }
    </style>
</head>
<body>
    <header>
        <div class="menu-container">
            <button class="menu-btn" id="menu-btn"><i data-lucide="list"></i></button>
            <span class="tunein"><img src="/images/Copy_of_Copy_of_TuneIn-removebg-preview.png" alt="TuneIn Logo">Tune In</span>
        </div>
        <div class="search-container">
            <form id="search-form" onsubmit="handleSearch(event)">
                <i data-lucide="search" class="search-icon"></i>
                <input type="text" name="query" id="search-input" placeholder="Search songs..." class="search-bar">
                <button type="submit" style="display: none;"></button>
            </form>
        </div>
        <% if (locals.user) { %>
            <div class="username-container">
                <p class="usernam-greet">Welcome,</p>
                <p class="username-name"><%= locals.user %>!</p>
            </div>
        <% } else { %>
            <div class="sign-in-box" onclick="window.location.href='/login'">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                    stroke="#eeecec" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-user-round-pen">
                    <path d="M2 21a8 8 0 0 1 10.821-7.487" />
                    <path d="M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z" />
                    <circle cx="10" cy="8" r="5" />
                </svg>
                <span>Sign In</span>
            </div>
        <% } %>
    </header>

    <div class="sidebar">
        <ul>
            <li onclick="redirectTo('home')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-house">
                    <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8" />
                    <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
                </svg> Home
            </li>
            <li onclick="redirectTo('liked-songs')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-heart">
                    <path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z" />
                </svg> Liked Songs
            </li>
            <li onclick="redirectTo('playlists')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-list-music">
                    <path d="M21 15V6" />
                    <path d="M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z" />
                    <path d="M12 12H3" />
                    <path d="M16 6H3" />
                    <path d="M12 18H3" />
                </svg> Playlists
            </li>
            <li onclick="redirectTo('Mood-based')" class="active">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-smile-plus">
                    <path d="M22 11v1a10 10 0 1 1-9-10" />
                    <path d="M8 14s1.5 2 4 2 4-2 4-2" />
                    <line x1="9" x2="9.01" y1="9" y2="9" />
                    <line x1="15" x2="15.01" y1="9" y2="9" />
                    <path d="M16 5h6" />
                    <path d="M19 2v6" />
                </svg> Mood-based
            </li>
            <li onclick="redirectTo('premium')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-crown">
                    <path d="M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z" />
                    <path d="M5 21h14" />
                </svg> Premium
            </li>
            <li onclick="redirectTo('profile')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-user-pen">
                    <path d="M11.5 15H7a4 4 0 0 0-4 4v2" />
                    <path d="M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z" />
                    <circle cx="10" cy="7" r="4" />
                </svg> Profile
            </li>
        </ul>
    </div>

    <div class="content-container">
        <div class="mood-header">
            <div class="mood-info">
                <div class="mood-emoji">
                    <% if (mood === 'love') { %>
                        <i data-lucide="heart"></i>
                    <% } else if (mood === 'sad') { %>
                        <i data-lucide="cloud-rain"></i>
                    <% } else if (mood === 'happy') { %>
                        <i data-lucide="sun"></i>
                    <% } else if (mood === 'energetic') { %>
                        <i data-lucide="zap"></i>
                    <% } else if (mood === 'chill') { %>
                        <i data-lucide="leaf"></i>
                    <% } else if (mood === 'party') { %>
                        <i data-lucide="sparkles"></i>
                    <% } else if (mood === 'focus') { %>
                        <i data-lucide="target"></i>
                    <% } else if (mood === 'workout') { %>
                        <i data-lucide="dumbbell"></i>
                    <% } %>
                </div>
                <div class="mood-details">
                    <div class="mood-label">Mood Playlist</div>
                    <h1 class="mood-title"><%= mood.charAt(0).toUpperCase() + mood.slice(1) %> Vibes</h1>
                    <div class="mood-info-text"><%= songs.length %> songs</div>
                </div>
            </div>
        </div>

        <table class="songs-table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Title</th>
                    <th>Artist</th>
                    <th>Duration</th>
                </tr>
            </thead>
            <tbody>
                <% if (songs && songs.length > 0) { %>
                    <% songs.forEach((song, index) => { %>
                        <tr class="song-row" onclick="playSong('<%= song.title %>')">
                            <td class="song-number"><%= index + 1 %></td>
                            <td>
                                <div class="song-info">
                                    <img src="data:image/jpeg;base64,<%= song.cover.toString('base64') %>" alt="<%= song.title %>" class="song-cover">
                                    <div class="song-details">
                                        <div class="song-title"><%= song.title %></div>
                                    </div>
                                </div>
                            </td>
                            <td><%= song.artist %></td>
                            <td>3:30</td>
                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr>
                        <td colspan="4" style="text-align: center; padding: 40px;">No songs found for this mood</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <div class="music-controls">
        <div class="track-info">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                stroke="#eeecec" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                class="lucide lucide-music">
                <path d="M9 18V5l12-2v13" />
                <circle cx="6" cy="18" r="3" />
                <circle cx="18" cy="16" r="3" />
            </svg>
            <div>
                <div id="track-name">Song Name</div>
                <div class="artist-name">Artist Name</div>
            </div>
        </div>

        <div class="controls">
            <button id="prev"><i data-lucide="skip-back"></i></button>
            <button id="play-pause"><i data-lucide="play"></i></button>
            <button id="next"><i data-lucide="skip-forward"></i></button>
        </div>
        <div class="progress-bar"><span id="progress"></span></div>
        <div class="controls">
            <button><i data-lucide="repeat"></i></button>
            <button><i data-lucide="heart"></i></button>
            <div class="volume-container">
                <button id="volume-btn"><i data-lucide="volume-2"></i></button>
                <div class="volume-slider" id="volume-slider"><input type="range" min="0" max="100" value="50"></div>
            </div>
        </div>
    </div>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Sidebar functionality
        const menuBtn = document.getElementById('menu-btn');
        const sidebar = document.querySelector('.sidebar');
        const body = document.body;
        const searchInput = document.getElementById('search-input');
        const songCards = document.querySelectorAll('.song-card');

        // Show sidebar by default
        sidebar.classList.add('open');
        body.classList.add('sidebar-open');

        // Toggle sidebar
        menuBtn.addEventListener('click', () => {
            sidebar.classList.toggle('open');
            body.classList.toggle('sidebar-open');
        });

        // Real-time search filtering
        searchInput.addEventListener('input', (e) => {
            const searchQuery = e.target.value.toLowerCase();
            
            songCards.forEach(card => {
                const songTitle = card.querySelector('.song-title').textContent.toLowerCase();
                const songArtist = card.querySelector('.song-artist').textContent.toLowerCase();
                
                if (songTitle.includes(searchQuery) || songArtist.includes(searchQuery)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        function redirectTo(page) {
            window.location.href = `/${page}`;
        }

        function handleSearch(event) {
            event.preventDefault();
            const query = searchInput.value;
            const searchQuery = query.toLowerCase();
            
            songCards.forEach(card => {
                const songTitle = card.querySelector('.song-title').textContent.toLowerCase();
                const songArtist = card.querySelector('.song-artist').textContent.toLowerCase();
                
                if (songTitle.includes(searchQuery) || songArtist.includes(searchQuery)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        function playSong(title) {
            window.location.href = `/play/${encodeURIComponent(title)}`;
        }
    </script>
</body>
</html>
